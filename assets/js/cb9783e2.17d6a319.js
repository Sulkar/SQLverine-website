(self.webpackChunksq_lverine_website=self.webpackChunksq_lverine_website||[]).push([[7901],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return s},kt:function(){return c}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),u=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},o=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,s=d(e,["components","mdxType","originalType","parentName"]),o=u(n),c=a,k=o["".concat(p,".").concat(c)]||o[c]||m[c]||i;return n?r.createElement(k,l(l({ref:t},s),{},{components:n})):r.createElement(k,l({ref:t},s))}));function c(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=o;var d={};for(var p in t)hasOwnProperty.call(t,p)&&(d[p]=t[p]);d.originalType=e,d.mdxType="string"==typeof e?e:a,l[1]=d;for(var u=2;u<i;u++)l[u]=n[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}o.displayName="MDXCreateElement"},2944:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return l},metadata:function(){return d},toc:function(){return p},default:function(){return s}});var r=n(2122),a=n(9756),i=(n(7294),n(3905)),l={sidebar_position:11},d={unversionedId:"SQLverine/create",id:"SQLverine/create",isDocsHomePage:!1,title:"TABLE: CREATE",description:"<img",source:"@site/docs/SQLverine/create.md",sourceDirName:"SQLverine",slug:"/SQLverine/create",permalink:"/SQLverine-website/docs/SQLverine/create",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/SQLverine/create.md",version:"current",sidebarPosition:11,frontMatter:{sidebar_position:11},sidebar:"sqlVerineSidebar",previous:{title:"INSERT",permalink:"/SQLverine-website/docs/SQLverine/insert"},next:{title:"TABLE: DROP",permalink:"/SQLverine-website/docs/SQLverine/drop"}},p=[{value:"eine neue Tabelle zur Datenbank hinzuf\xfcgen",id:"eine-neue-tabelle-zur-datenbank-hinzuf\xfcgen",children:[{value:"Beispiel 1:",id:"beispiel-1",children:[]},{value:"Beispiel 2:",id:"beispiel-2",children:[]}]}],u={toc:p};function s(e){var t=e.components,l=(0,a.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,r.Z)({},u,l,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("img",{src:n(1620).Z,style:{width:200}}),(0,i.kt)("h2",{id:"eine-neue-tabelle-zur-datenbank-hinzuf\xfcgen"},"eine neue Tabelle zur Datenbank hinzuf\xfcgen"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"CREATE TABLE tabellenname (\n   spaltenname_1 <DATENTYP> <EINSCHR\xc4NKUNG>, \n   spaltenname_2 <DATENTYP> <EINSCHR\xc4NKUNG>, \n   ... <DATENTYP> <EINSCHR\xc4NKUNG>, \n   spaltenname_n <DATENTYP> <EINSCHR\xc4NKUNG>,\n   <WEITERE EINSCHR\xc4NKUNG>,\n   ...\n)\n")),(0,i.kt)("p",null,'Erstellt eine neue Tabelle mit den angegebenen Spalten. Jede Spalte ben\xf6tigt einen Datentyp, der angibt, welche Daten in dieser Spalte eingetragen werden k\xf6nnen. Neben dem Datentyp k\xf6nnen noch  Einschr\xe4nkungen hinzugef\xfcgt werden. Jede Tabelle muss eine Spalte "id" mit dem Datentyp INTEGER und der Einschr\xe4nkung PRIMARY KEY haben, damit jeder Zeile eine eindeutige Identifikationsnummer zugewiesen werden kann, die automatisch hochgez\xe4hlt wird.'),(0,i.kt)("h4",{id:"datentyp"},"<DATENTYP",">"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Datentyp"),(0,i.kt)("th",{parentName:"tr",align:null},"Erkl\xe4rung"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"INTEGER"),(0,i.kt)("td",{parentName:"tr",align:null},"Ganzzahl")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"REAL"),(0,i.kt)("td",{parentName:"tr",align:null},"Gleitkommazahl")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"TEXT"),(0,i.kt)("td",{parentName:"tr",align:null},"Text")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"BLOB"),(0,i.kt)("td",{parentName:"tr",align:null},"H\xe4lt Daten genau so, wie diese eingegeben wurden. Ideal z.B. f\xfcr Dateien oder Bilder.")))),(0,i.kt)("p",null,"In SQLite gibt es keinen Datentyp f\xfcr Datumswerte. Diese speichern wir als Text nach ISO8601. Der Syntax hierzu ist YYYY-MM-DD, z.B. 2009-11-13."),(0,i.kt)("h4",{id:"einschr\xe4nkung"},"<EINSCHR\xc4NKUNG",">"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Einschr\xe4nkung"),(0,i.kt)("th",{parentName:"tr",align:null},"Erkl\xe4rung"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"UNIQUE"),(0,i.kt)("td",{parentName:"tr",align:null},"Jeder Wert dieser Spalte darf nur einmal vorkommen.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"PRIMARY KEY"),(0,i.kt)("td",{parentName:"tr",align:null},"Definiert die Werte einer Spalte als Prim\xe4rschl\xfcssel, anhand derer jede Zeile eindeutig identifizierbar wird. Sie sind automatisch UNIQUE.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"FOREIGN KEY"),(0,i.kt)("td",{parentName:"tr",align:null},"Definiert die Werte einer Spalte als Fremdschl\xfcssel.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"NOT NULL"),(0,i.kt)("td",{parentName:"tr",align:null},"Legt fest, dass die Werte einer Spalte nicht leer sein d\xfcrfen.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"DEFAULT <wert",">"),(0,i.kt)("td",{parentName:"tr",align:null},"Legt einen Standartwert f\xfcr die Spalte fest, wenn kein Wert eingetragen wird.")))),(0,i.kt)("h3",{id:"beispiel-1"},"Beispiel 1:"),(0,i.kt)("h4",{id:"befehl"},"Befehl"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'CREATE TABLE "lehrer" (\n    "id" INTEGER PRIMARY KEY, \n    "vorname" TEXT, \n    "nachname" TEXT\n)\n')),(0,i.kt)("p",null,"Mit diesem Befehl wird eine Tabelle mit dem Namen lehrer angelegt, die zwei Spalten als TEXT sowie eine Spalte id mit dem Datentyp INTEGER und der Einschr\xe4nkung PRIMARY KEY hat."),(0,i.kt)("h4",{id:"ergebnis"},"Ergebnis:"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Tabelle: lehrer")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"id"),(0,i.kt)("th",{parentName:"tr",align:null},"vorname"),(0,i.kt)("th",{parentName:"tr",align:null},"nachname"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null})))),(0,i.kt)("p",null,"Die neu erstellte Tabelle hat noch keine Eintr\xe4ge, diese k\xf6nnen mit dem INSERT INTO-Befehl eingef\xfcgt werden."),(0,i.kt)("h3",{id:"beispiel-2"},"Beispiel 2:"),(0,i.kt)("h4",{id:"befehl-1"},"Befehl"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'CREATE TABLE "klassen" (\n    "id" INTEGER PRIMARY KEY, \n    "name" TEXT, \n    "jahrgangsstufe" INTEGER, \n    "lehrer_id" INTEGER,\n    FOREIGN KEY "lehrer_id" REFERENCES "lehrer"("id")\n)\n')),(0,i.kt)("p",null,"Mit diesem Befehl wird eine Tabelle mit dem Namen klassen angelegt, die mehrere Spalten als TEXT und als INTEGER hat sowie eine Spalte id, mit der Einschr\xe4nkung PRIMARY KEY. Am Ende des Befehls wird eine Referenz auf eine zweite Tabelle klassen, auf die Spalte id gesetzt."),(0,i.kt)("p",null,"Dieser Verweis verbindet eindeutig Eintr\xe4ge, die \xfcber mehrere Tabellen hinweg verteilt sind. Beispiel: eine Klasse ist genau einem bestimmten Lehrer zugeordnet."),(0,i.kt)("h4",{id:"ergebnis-1"},"Ergebnis:"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Tabelle 2: klassen")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"id"),(0,i.kt)("th",{parentName:"tr",align:null},"name"),(0,i.kt)("th",{parentName:"tr",align:"center"},"jahrgangsstufe"),(0,i.kt)("th",{parentName:"tr",align:"center"},"lehrer_id"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:"center"}),(0,i.kt)("td",{parentName:"tr",align:"center"})))))}s.isMDXComponent=!0},1620:function(e,t,n){"use strict";t.Z=n.p+"assets/images/Create-13593a49d7c9ca69c1a969dffa2a9e0b.png"}}]);